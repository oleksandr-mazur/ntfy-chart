# Default values for ntfy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: binwiederhier/ntfy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2.12.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

cacheStoragePath: ""

host: ""

logLevel: info
logFormat: json

attachmentCacheDir: /var/lib/ntfy/attachment/
attachmentTotalSizeLimit: "5G"
attachmentFileSizeLimit: "15M"
attachmentExpiryDuration: "72h"

cacheFile: /var/lib/ntfy/cache.db
cacheDuration: "48h"

authFile: /var/lib/ntfy/user.db
authDefaultAccess: deny-all

behindProxy: true
# Rate limiting: Total number of topics before the server rejects new topics.
globalTopicLimit: 50
# Rate limiting: Number of subscriptions per visitor (IP address)
visitorSubscriptionLimit: 15
# Initial bucket of requests each visitor has. This defaults to 60.
visitorRequestLimitBurst: 60
# Rate at which the bucket is refilled (one request per x). Defaults to 5s.
visitorRequestLimitReplenish: 5s
# Comma-separated list of hostnames and IPs to be exempt from request rate limiting; hostnames are resolved at the time the server is started. Defaults to an empty list.
visitorRequestLimitExemptHosts: ""
visitorMessageDailyLimit: 1000

# Web Push: Private Key. Run ntfy webpush keys to generate
webPushPrivateKey:
# Web Push: Database file that stores subscriptions
webPushFile:
# Web Push: Sender email address
webPushEmailAddress:
# Web Push: SQL queries to run against subscription database at startup
webPushStartupQueries:
# Web Push: Duration after which a subscription is considered stale and will be deleted. This is to prevent stale subscriptions.
webPushExpiryDuration: "60d"
# Web Push: Duration after which a warning is sent to subscribers that their subscription will expire soon. This is to prevent stale subscriptions.
webPushExpiryWarningDuration: "55d"

# Grafana dashboard https://raw.githubusercontent.com/binwiederhier/ntfy/main/examples/grafana-dashboard/ntfy-grafana.json
metrics:
  port: 10254
  portName: metrics
  enabled: true
  service:
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "10254"
      # prometheus.io/port: '{{ .Values.metrics.service.port }}'
    labels: {}
    # servicePort: 10254
    type: ClusterIP
  serviceMonitor:
    enabled: true
    additionalLabels: {}
    annotations: {}
    ## The label to use to retrieve the job name from.
    ## jobLabel: "app.kubernetes.io/name"
    namespace: ""
    namespaceSelector: {}
    scrapeInterval: 30s
    # honorLabels: true
    targetLabels: []
    relabelings: []
    metricRelabelings: []

